export type {{{name}}} = undefined | {{{type}}};

export function {{{initializer}}}(validated: {{{internalPrefix}}}Validated.{{{name}}}): {{{name}}} {
    return undefined;
}

export function {{{resolver}}}(dest: {{{name}}}, src: {{{internalPrefix}}}Validated.{{{name}}}, resolvedReferences: {
{{#references}}
    {{{name}}}: {[key: string]: {{{type}}} },
{{/references}}
}): {{{name}}} {
    const value = resolvedReferences.{{{name}}}[src];
    if (typeof value === 'undefined') throw new {{{internalPrefix}}}Util.ResolutionError(`key: [${src}] not found in reference: [{{{name}}}]`)
    return value;
}

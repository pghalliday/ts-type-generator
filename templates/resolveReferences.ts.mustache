import * as Resolved from "./{{{resolved}}}";
import * as References from "./{{{references}}}";

export function resolveReferences(validatedReferences: References.ValidatedReferences): References.CollapsedReferences {
    const resolvedReferences: References.ResolvedReferences = {
{{#referencesData}}
        {{{name}}}: {},
{{/referencesData}}
    };

{{#referencesData}}
    const validated_{{{name}}} = validatedReferences.{{{name}}};
    const resolved_{{{name}}} = resolvedReferences.{{{name}}};
    for (const key in validated_{{{name}}}) {
        resolved_{{{name}}}[key] = Resolved.{{{initializer}}}(validated_{{{name}}}[key]);
    }
{{/referencesData}}

{{#referencesData}}
    for (const key in validated_{{{name}}}) {
        resolved_{{{name}}}[key] = Resolved.{{{resolver}}}(resolved_{{{name}}}[key], validated_{{{name}}}[key], resolvedReferences);
    }
{{/referencesData}}

    return <References.CollapsedReferences> resolvedReferences;
}

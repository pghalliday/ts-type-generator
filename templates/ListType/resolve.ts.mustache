export type {{{name}}} = undefined | {{{type}}}[];

export function {{{initializer}}}(validated: {{{internalPrefix}}}Validated.{{{name}}}): {{{name}}} {
    const value: {{{name}}} = [];
    for (const item of validated) {
        value.push({{{typeInitializer}}}(item));
    }
    return value;
}

export function {{{resolver}}}(dest: {{{name}}}, src: {{{internalPrefix}}}Validated.{{{name}}}, resolvedReferences: {
{{#references}}
    {{{name}}}: {[key: string]: {{{type}}} },
{{/references}}
}): {{{name}}} {
    for (const index in src) {
        dest![index] = {{{typeResolver}}}(dest![index], src[index], resolvedReferences);
    }
    return dest;
}

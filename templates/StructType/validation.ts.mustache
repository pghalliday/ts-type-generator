import * as Util from "../util";
import {ValidationError} from "../ValidationError";
import * as Private from "../private";
import * as Public from "../public";

{{#isPublic}}
export type {{{typeName}}} = {{{namespacedTypeDef}}};

{{/isPublic}}
export function {{{validatorName}}}(data: unknown): {{{typeName}}} | ValidationError {
    if (!Util.isObject(data)) return new ValidationError("Not an object");
    {{#properties}}
    const property_{{{propertyName}}} = Util.validateProperty(data, "{{{propertyName}}}", {{{propertyValidatorName}}});
    if (property_{{{propertyName}}} instanceof ValidationError) return property_{{{propertyName}}};
    {{/properties}}
    return {
    {{#properties}}
        {{{propertyName}}}: property_{{{propertyName}}},
    {{/properties}}
    };
}

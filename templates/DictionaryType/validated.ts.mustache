export type {{{name}}} = {[key: string]: {{{type}}} };

export function {{{validator}}}(data: unknown): {{{name}}} | {{{internalPrefix}}}Util.ValidationError {
    if (!{{{internalPrefix}}}Util.isObject(data)) return new {{{internalPrefix}}}Util.ValidationError('Not a dictionary');
    const dictionary: {{{name}}} = {};
    for (const key in data) {
        const validated = {{{typeValidator}}}(data[key]);
        if (validated instanceof {{{internalPrefix}}}Util.ValidationError) return new {{{internalPrefix}}}Util.ValidationError(`Error encountered validating key: [${key}]`, validated);
        dictionary[key] = validated;
    }
    return dictionary;
}
